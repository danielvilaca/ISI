using NuGet.ContentModel;
using System.Net;
using System.Net.Http;
using System.Threading.Tasks;
using Moq;
using Moq.Protected;
using Xunit;

namespace AnaliseMalware.Services
{
    public class VirusTotalServiceTests
    {
        [Fact]
        public async Task ScanFileAsync_ShouldReturnResponseContent()
        {
            // Arrange
            var mockHttpMessageHandler = new Mock<HttpMessageHandler>();
            mockHttpMessageHandler
                .Protected()
                .Setup<Task<HttpResponseMessage>>(
                    "SendAsync",
                    ItExpr.IsAny<HttpRequestMessage>(),
                    ItExpr.IsAny<CancellationToken>()
                )
                .ReturnsAsync(new HttpResponseMessage
                {
                    StatusCode = HttpStatusCode.OK,
                    Content = new StringContent("{\"message\": \"File uploaded successfully\"}")
                });

            var httpClient = new HttpClient(mockHttpMessageHandler.Object);
            var apiKey = "mock-api-key";
            var virusTotalService = new VirusTotalService(httpClient, apiKey);

            var fileContent = new byte[] { 1, 2, 3, 4 };
            var fileName = "testfile.txt";

            // Act
            var response = await virusTotalService.ScanFileAsync(fileContent, fileName);

            // Assert
            Assert.NotNull(response);
            Assert.Contains("File uploaded successfully", response);
        }
    }
}
