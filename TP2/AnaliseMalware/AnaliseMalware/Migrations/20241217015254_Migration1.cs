using System;
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace AnaliseMalware.Migrations
{
    /// <inheritdoc />
    public partial class Migration1 : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.CreateTable(
                name: "MalwareSignature",
                columns: table => new
                {
                    SignatureID = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MalwareName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RiskLevel = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    MalwareDesc = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MalwareSignature", x => x.SignatureID);
                });

            migrationBuilder.CreateTable(
                name: "Role",
                columns: table => new
                {
                    RoleID = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    RoleName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RoleDesc = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Role", x => x.RoleID);
                });

            migrationBuilder.CreateTable(
                name: "User",
                columns: table => new
                {
                    UserID = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    RoleID = table.Column<int>(type: "int", nullable: false),
                    Username = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    email = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PasswordHash = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CreatedAt = table.Column<DateTime>(type: "datetime2", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_User", x => x.UserID);
                    table.ForeignKey(
                        name: "FK_User_Role_RoleID",
                        column: x => x.RoleID,
                        principalTable: "Role",
                        principalColumn: "RoleID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "File",
                columns: table => new
                {
                    FileID = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    UserID = table.Column<int>(type: "int", nullable: false),
                    FileName = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    FileHash = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    UploadDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    FileSize = table.Column<long>(type: "bigint", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_File", x => x.FileID);
                    table.ForeignKey(
                        name: "FK_File_User_UserID",
                        column: x => x.UserID,
                        principalTable: "User",
                        principalColumn: "UserID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "Url",
                columns: table => new
                {
                    UrlID = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    UserID = table.Column<int>(type: "int", nullable: false),
                    UrlName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SubmitDate = table.Column<DateTime>(type: "datetime2", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Url", x => x.UrlID);
                    table.ForeignKey(
                        name: "FK_Url_User_UserID",
                        column: x => x.UserID,
                        principalTable: "User",
                        principalColumn: "UserID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "UserSession",
                columns: table => new
                {
                    SessionID = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    UserID = table.Column<int>(type: "int", nullable: false),
                    SessionToken = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    SessionCreatedAt = table.Column<DateTime>(type: "datetime2", nullable: true),
                    SessionExpiresAt = table.Column<DateTime>(type: "datetime2", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_UserSession", x => x.SessionID);
                    table.ForeignKey(
                        name: "FK_UserSession_User_UserID",
                        column: x => x.UserID,
                        principalTable: "User",
                        principalColumn: "UserID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "FileAnalysis",
                columns: table => new
                {
                    FileAnalysisID = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    FileID = table.Column<int>(type: "int", nullable: false),
                    FileStatus = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    FileAnalysisDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    FileAnalysisResult = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_FileAnalysis", x => x.FileAnalysisID);
                    table.ForeignKey(
                        name: "FK_FileAnalysis_File_FileID",
                        column: x => x.FileID,
                        principalTable: "File",
                        principalColumn: "FileID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "UrlAnalysis",
                columns: table => new
                {
                    UrlAnalysisId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    UrlId = table.Column<int>(type: "int", nullable: false),
                    UrlStatus = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UrlAnalysisDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    UrlAnalysisResult = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    UrlID = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_UrlAnalysis", x => x.UrlAnalysisId);
                    table.ForeignKey(
                        name: "FK_UrlAnalysis_Url_UrlID",
                        column: x => x.UrlID,
                        principalTable: "Url",
                        principalColumn: "UrlID");
                });

            migrationBuilder.CreateTable(
                name: "FileAnalysisMalware",
                columns: table => new
                {
                    FileAnalysisMalwareID = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    FileAnalysisID = table.Column<int>(type: "int", nullable: false),
                    SignatureID = table.Column<int>(type: "int", nullable: false),
                    MalwareSignatureID = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_FileAnalysisMalware", x => x.FileAnalysisMalwareID);
                    table.ForeignKey(
                        name: "FK_FileAnalysisMalware_FileAnalysis_FileAnalysisID",
                        column: x => x.FileAnalysisID,
                        principalTable: "FileAnalysis",
                        principalColumn: "FileAnalysisID",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_FileAnalysisMalware_MalwareSignature_MalwareSignatureID",
                        column: x => x.MalwareSignatureID,
                        principalTable: "MalwareSignature",
                        principalColumn: "SignatureID",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "UrlAnalysisMalware",
                columns: table => new
                {
                    UrlAnalysisMalwareID = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    UrlAnalysisID = table.Column<int>(type: "int", nullable: false),
                    SignatureID = table.Column<int>(type: "int", nullable: false),
                    MalwareSignatureID = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_UrlAnalysisMalware", x => x.UrlAnalysisMalwareID);
                    table.ForeignKey(
                        name: "FK_UrlAnalysisMalware_MalwareSignature_MalwareSignatureID",
                        column: x => x.MalwareSignatureID,
                        principalTable: "MalwareSignature",
                        principalColumn: "SignatureID",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_UrlAnalysisMalware_UrlAnalysis_UrlAnalysisID",
                        column: x => x.UrlAnalysisID,
                        principalTable: "UrlAnalysis",
                        principalColumn: "UrlAnalysisId",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateIndex(
                name: "IX_File_UserID",
                table: "File",
                column: "UserID");

            migrationBuilder.CreateIndex(
                name: "IX_FileAnalysis_FileID",
                table: "FileAnalysis",
                column: "FileID");

            migrationBuilder.CreateIndex(
                name: "IX_FileAnalysisMalware_FileAnalysisID",
                table: "FileAnalysisMalware",
                column: "FileAnalysisID");

            migrationBuilder.CreateIndex(
                name: "IX_FileAnalysisMalware_MalwareSignatureID",
                table: "FileAnalysisMalware",
                column: "MalwareSignatureID");

            migrationBuilder.CreateIndex(
                name: "IX_Url_UserID",
                table: "Url",
                column: "UserID");

            migrationBuilder.CreateIndex(
                name: "IX_UrlAnalysis_UrlID",
                table: "UrlAnalysis",
                column: "UrlID");

            migrationBuilder.CreateIndex(
                name: "IX_UrlAnalysisMalware_MalwareSignatureID",
                table: "UrlAnalysisMalware",
                column: "MalwareSignatureID");

            migrationBuilder.CreateIndex(
                name: "IX_UrlAnalysisMalware_UrlAnalysisID",
                table: "UrlAnalysisMalware",
                column: "UrlAnalysisID");

            migrationBuilder.CreateIndex(
                name: "IX_User_RoleID",
                table: "User",
                column: "RoleID");

            migrationBuilder.CreateIndex(
                name: "IX_UserSession_UserID",
                table: "UserSession",
                column: "UserID");
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "FileAnalysisMalware");

            migrationBuilder.DropTable(
                name: "UrlAnalysisMalware");

            migrationBuilder.DropTable(
                name: "UserSession");

            migrationBuilder.DropTable(
                name: "FileAnalysis");

            migrationBuilder.DropTable(
                name: "MalwareSignature");

            migrationBuilder.DropTable(
                name: "UrlAnalysis");

            migrationBuilder.DropTable(
                name: "File");

            migrationBuilder.DropTable(
                name: "Url");

            migrationBuilder.DropTable(
                name: "User");

            migrationBuilder.DropTable(
                name: "Role");
        }
    }
}
