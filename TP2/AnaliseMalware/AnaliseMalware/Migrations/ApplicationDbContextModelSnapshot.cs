// <auto-generated />
using System;
using AnaliseMalware.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AnaliseMalware.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AnaliseMalware.Models.File", b =>
                {
                    b.Property<int>("FileID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FileID"));

                    b.Property<string>("FileHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("FileSize")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UploadDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("FileID");

                    b.HasIndex("UserID");

                    b.ToTable("File");
                });

            modelBuilder.Entity("AnaliseMalware.Models.FileAnalysis", b =>
                {
                    b.Property<int>("FileAnalysisID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FileAnalysisID"));

                    b.Property<DateTime?>("FileAnalysisDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileAnalysisResult")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FileID")
                        .HasColumnType("int");

                    b.Property<string>("FileStatus")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FileAnalysisID");

                    b.HasIndex("FileID");

                    b.ToTable("FileAnalysis");
                });

            modelBuilder.Entity("AnaliseMalware.Models.FileAnalysisMalware", b =>
                {
                    b.Property<int>("FileAnalysisMalwareID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FileAnalysisMalwareID"));

                    b.Property<int>("FileAnalysisID")
                        .HasColumnType("int");

                    b.Property<int>("MalwareSignatureID")
                        .HasColumnType("int");

                    b.Property<int>("SignatureID")
                        .HasColumnType("int");

                    b.HasKey("FileAnalysisMalwareID");

                    b.HasIndex("FileAnalysisID");

                    b.HasIndex("MalwareSignatureID");

                    b.ToTable("FileAnalysisMalware");
                });

            modelBuilder.Entity("AnaliseMalware.Models.MalwareSignature", b =>
                {
                    b.Property<int>("SignatureID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SignatureID"));

                    b.Property<string>("MalwareDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MalwareName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RiskLevel")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SignatureID");

                    b.ToTable("MalwareSignature");
                });

            modelBuilder.Entity("AnaliseMalware.Models.Role", b =>
                {
                    b.Property<int>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleID"));

                    b.Property<string>("RoleDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleID");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("AnaliseMalware.Models.Url", b =>
                {
                    b.Property<int>("UrlID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UrlID"));

                    b.Property<DateTime?>("SubmitDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UrlName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("UrlID");

                    b.HasIndex("UserID");

                    b.ToTable("Url");
                });

            modelBuilder.Entity("AnaliseMalware.Models.UrlAnalysis", b =>
                {
                    b.Property<int>("UrlAnalysisId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UrlAnalysisId"));

                    b.Property<DateTime?>("UrlAnalysisDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UrlAnalysisResult")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UrlID")
                        .HasColumnType("int");

                    b.Property<int>("UrlId")
                        .HasColumnType("int");

                    b.Property<string>("UrlStatus")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UrlAnalysisId");

                    b.HasIndex("UrlID");

                    b.ToTable("UrlAnalysis");
                });

            modelBuilder.Entity("AnaliseMalware.Models.UrlAnalysisMalware", b =>
                {
                    b.Property<int>("UrlAnalysisMalwareID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UrlAnalysisMalwareID"));

                    b.Property<int>("MalwareSignatureID")
                        .HasColumnType("int");

                    b.Property<int>("SignatureID")
                        .HasColumnType("int");

                    b.Property<int>("UrlAnalysisID")
                        .HasColumnType("int");

                    b.HasKey("UrlAnalysisMalwareID");

                    b.HasIndex("MalwareSignatureID");

                    b.HasIndex("UrlAnalysisID");

                    b.ToTable("UrlAnalysisMalware");
                });

            modelBuilder.Entity("AnaliseMalware.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.HasIndex("RoleID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("AnaliseMalware.Models.UserSession", b =>
                {
                    b.Property<int>("SessionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SessionID"));

                    b.Property<DateTime?>("SessionCreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("SessionExpiresAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("SessionToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("SessionID");

                    b.HasIndex("UserID");

                    b.ToTable("UserSession");
                });

            modelBuilder.Entity("AnaliseMalware.Models.File", b =>
                {
                    b.HasOne("AnaliseMalware.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("AnaliseMalware.Models.FileAnalysis", b =>
                {
                    b.HasOne("AnaliseMalware.Models.File", "File")
                        .WithMany()
                        .HasForeignKey("FileID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("File");
                });

            modelBuilder.Entity("AnaliseMalware.Models.FileAnalysisMalware", b =>
                {
                    b.HasOne("AnaliseMalware.Models.FileAnalysis", "FileAnalysis")
                        .WithMany()
                        .HasForeignKey("FileAnalysisID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AnaliseMalware.Models.MalwareSignature", "MalwareSignature")
                        .WithMany()
                        .HasForeignKey("MalwareSignatureID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FileAnalysis");

                    b.Navigation("MalwareSignature");
                });

            modelBuilder.Entity("AnaliseMalware.Models.Url", b =>
                {
                    b.HasOne("AnaliseMalware.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("AnaliseMalware.Models.UrlAnalysis", b =>
                {
                    b.HasOne("AnaliseMalware.Models.Url", "Url")
                        .WithMany()
                        .HasForeignKey("UrlID");

                    b.Navigation("Url");
                });

            modelBuilder.Entity("AnaliseMalware.Models.UrlAnalysisMalware", b =>
                {
                    b.HasOne("AnaliseMalware.Models.MalwareSignature", "MalwareSignature")
                        .WithMany()
                        .HasForeignKey("MalwareSignatureID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AnaliseMalware.Models.UrlAnalysis", "UrlAnalysis")
                        .WithMany()
                        .HasForeignKey("UrlAnalysisID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MalwareSignature");

                    b.Navigation("UrlAnalysis");
                });

            modelBuilder.Entity("AnaliseMalware.Models.User", b =>
                {
                    b.HasOne("AnaliseMalware.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("AnaliseMalware.Models.UserSession", b =>
                {
                    b.HasOne("AnaliseMalware.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
