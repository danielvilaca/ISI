using AnaliseMalware.Services;
using Microsoft.AspNetCore.Mvc;

namespace AnaliseMalware.Controllers
{
    [ApiController]
    [Route("api/[controller]")]
    public class FileController : Controller
    {
        private readonly VirusTotalApiClient _virusTotalApiClient;

        public FileController(VirusTotalApiClient virusTotalApiClient)
        {
            _virusTotalApiClient = virusTotalApiClient;
        }

        [HttpPost("scan")]
        public async Task<IActionResult> ScanFile(IFormFile file)
        {
            try
            {
                // Check if a file was uploaded
                if (file == null || file.Length == 0)
                    return BadRequest("No file uploaded.");

                // Optionally save the file locally if you need to process it
                var filePath = Path.Combine(Path.GetTempPath(), file.FileName);
                using (var stream = new FileStream(filePath, FileMode.Create))
                {
                    await file.CopyToAsync(stream);
                }

                // Scan the file using VirusTotal API
                var scanResult = await _virusTotalApiClient.ScanFileAsync(filePath);

                // Return the scan result
                return Ok(scanResult);
            }
            catch (Exception ex)
            {
                return View("Error", new { message = ex.Message });
            }
        }

        // Action to get a file report by its hash
        [HttpGet]
        public async Task<IActionResult> GetFileReport(string fileHash)
        {
            try
            {
                var fileReport = await _virusTotalApiClient.GetFileReportAsync(fileHash);
                return View(fileReport);
            }
            catch (Exception ex)
            {
                return View("Error", new { message = ex.Message });
            }
        }
    }
}
